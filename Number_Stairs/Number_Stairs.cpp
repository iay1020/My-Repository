#pragma warning(disable: 4996)

#include<stdio.h>
#include<time.h>
void main(void)
{
	srand(time(0)); // 난수 테이블

	int iCnt = 0;
	int iRValue = 0;

	for (int i = 0; i < 100; i++) {

		if (i % 10 <= iCnt)
		{
			iRValue = (rand() % 10) + 1;
			printf("%d  ", iRValue);
			if (iRValue % 10 != 0)
				printf(" ");
			iRValue = 0;
		}

		else
			printf("%d   ", 0);

		if (i % 10 == 9)
		{
			printf("\n");
			++iCnt;
		}
	}
}
/*
숫자로 계단을 만드는 문제
1 0 0 0 0 0 0 0 0 0
1 2 0 0 0 0 0 0 0 0
1 2 3 0 0 0 0 0 0 0

이런식으로 10 X 10 크기의 계단을 만들어야 한다.
숫자는 랜덤으로 출력이 되어야 한다.

1. 2치원 배열로 만드는것
2. 1차원 배열로 만드는것
3. for문으로 만드는것

2차원과 1차원 배열로 만드는것은 간단하게 만들 수 있었다.
하지만 for문으로 만드는것은 고민을 많이 했다.

첫줄에 하나의 수를 출력하고 나머지는 0으로 출력해야하고,
두번째 줄에서 두개의 수를 출력하고 나머지는 0으로 출력해야 했다.

거기서 생각이 났던것은 iCnt를 이용하여 줄바꿈이 일어날때 증감을 해주기로 했다.
맨 왼쪽 세로줄은 모두 0, 10, 20, 30 순서로 10으로 나누어져 떨어지는 값이였다.

따라서 i가 10으로 나누어 졌을때 나머지의 값이 iCnt보다 낮다면 숫자를 출력하게 했다.
그리고 그렇지 않을 결우에는 0을 출력 하도록 하였다.

줄 바꿈에 관해서는 i%10을 했을때 나머지가 9일 경우에 줄바꿈을 하게 했다.
이유는 i는 0부터 증가하기 때문에 0 ~ 9까지의 개수가 10개이기 때문이다.

추가로 1 ~ 9까지의 수는 한칸이지만, 10이 나왔을때에는 2칸을 차지하므로 출력 결과가
깨끗하게 정렬이 안되었다.

그래서 rand를 이용한 랜덤값을 변수 iRValue(int Random Value)의 공간에 저장을 하고,
만약 그 값이 10으로 나누어졌을때 나머지의 값이 0이 아닐경우 1 ~ 9의 값이기 때문에
공백을 한칸 넣어줬다.

(rand() % 10)+1 의 의미는 0 ~ 9까지의 수에서 1을 더해서 1 ~ 10의 값을 얻기 위함이다.
배열이 꼭 필요할꺼라고 생각 했는데, 다른 방법으로도 구현이 가능하다는 점을 알게 되었다.

2차원 배열, 1차원 배열, for문 순서로 작성을 하면서 좀 더 머리를 굴려보았던 문제이다.
*/

